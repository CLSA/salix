#!/usr/bin/php
<?php
/**
 * push_salix_meta.php
 *
 * A script which will push meta data from salix to an APEX host database.
 * Images imported from Opal into APEX cause the embedded proprietary patient
 * biography to be created in the APEX PATIENT and ScanAnalysis db tables.
 * Images may contain erroneous biographical and identifying information
 * whereas salix db tables contain "cleaned" data.  This script updates
 * the APEX db tables with cleaned data and de-identifies all biographical
 * information.
 *
 * @author Dean Inglis <inglisd@mcmaster.ca>
 */

chdir( dirname( __FILE__ ).'/../' );
require_once 'settings.ini.php';
require_once 'settings.local.ini.php';
require_once $SETTINGS['path']['CENOZO'].'/src/initial.class.php';
$initial = new \cenozo\initial();
$settings = $initial->get_settings();

define( 'USER', $settings['utility']['username'] );

define( 'DB_SERVER', $settings['db']['server'] );
define( 'DB_PREFIX', $settings['db']['database_prefix'] );
define( 'DB_USERNAME', $settings['db']['username'] );
define( 'DB_PASSWORD', $settings['db']['password'] );

// lite wrapper for mysqli
require_once( $settings['path']['PHP_UTIL'].'/database.class.php' );
// lite wrapper for MS SQL
require_once( $settings['path']['PHP_UTIL'].'/odbc.class.php' );

// function for writing to the log
function write_log( $message )
{
  file_put_contents(
    LOG_FILE_PATH,
    sprintf( "%s  [cron] <%s> %s\n\n", date( 'Y-m-d (D) H:i:s' ), USER, $message ),
    FILE_APPEND
  );
}

$QUOTED_FIELDS = array(
  'SEX',
  'BIRTHDATE',
  'ETHNICITY'
);

$PRECISION_FIELDS = array(
  'ADJUSTED_AGE' => 2,
  'BMI' => 1,
  'HEIGHT' => 1,
  'WEIGHT' => 1
);

/*-------------MAIN PROGRAM-----------*/

$dexa_host_option = NULL;
if( 2 == $argc )
{
  $dexa_host_option = $argv[1];
}

$db_salix = null;
try
{
  $db_salix = new database(
    DB_SERVER, DB_USERNAME, DB_PASSWORD, DB_PREFIX . 'salix' );
}
catch( Exception $e )
{
  write_log( $e->getMessage() );
  return 0;
}

$sql = 'SELECT * FROM apex_host';
$host_list = $db_salix->get_all( $sql );
if( false === $host_list || !is_array( $host_list ) ||
  0 == count( $host_list ) )
{
  write_log( 'ERROR: no host data available' );
  return 0;
}

$process_list = array(
  'name' => array(),
  'total' => array(),
  'num_patient' => array(),
  'num_patient_item' => array(),
  'num_analysis' => array(),
  'num_analysis_item' => array()
  );
foreach( $host_list as $host_item )
{
  if( NULL != $dexa_host_option && $dexa_host_option != $host_item['name'] )
    continue;

  $db_dexa_server = strtoupper( $host_item['name'] );
  $db_dexa_username = $host_item['sql_user'];
  $db_dexa_password  = $host_item['sql_pass'];

  $db_dexa = null;
  try
  {
    $db_dexa = new odbc( $db_dexa_server, $db_dexa_username, $db_dexa_password );
  }
  catch( Exception $e )
  {
    write_log( $e->getMessage() );
    continue;
  }

  // Anonymize all patient biography data populated from the dicom image import
  //
  $sql =
    'SELECT COUNT(*) '.
    'FROM PatScan.dbo.PATIENT '.
    'WHERE DATALENGTH(LAST_NAME)>0 '.
    'OR DATALENGTH(FIRST_NAME)>0 '.
    'OR DATALENGTH(MID_INITIAL)>0 '.
    'OR DATALENGTH(PAT_COMMENT)>0 '.
    'OR DATALENGTH(REF_PHYSICIAN)>0 '.
    'OR DATALENGTH(STUDY)>0 '.
    'OR DATALENGTH(ADDRESS1)>0 '.
    'OR DATALENGTH(ADDRESS2)>0 '.
    'OR DATALENGTH(CITY)>0 '.
    'OR DATALENGTH(STATE)>0 '.
    'OR DATALENGTH(POSTAL)>0 '.
    'OR DATALENGTH(COUNTRY)>0';

  $res = $db_dexa->get_one( $sql );
  if( false !== $res && 0 < $res )
  {
    $sql =
      'UPDATE PatScan.dbo.PATIENT '.
      'SET FIRST_NAME=null, LAST_NAME=null, '.
      'MID_INITIAL=null, PAT_COMMENT=null, REF_PHYSICIAN=null, '.
      'STUDY=null, ADDRESS1=null, ADDRESS2=null, CITY=null, '.
      'STATE=null, POSTAL=null, COUNTRY=null '.
      'WHERE DATALENGTH(LAST_NAME)>0 '.
      'OR DATALENGTH(FIRST_NAME)>0 '.
      'OR DATALENGTH(MID_INITIAL)>0 '.
      'OR DATALENGTH(PAT_COMMENT)>0 '.
      'OR DATALENGTH(REF_PHYSICIAN)>0 '.
      'OR DATALENGTH(STUDY)>0 '.
      'OR DATALENGTH(ADDRESS1)>0 '.
      'OR DATALENGTH(ADDRESS2)>0 '.
      'OR DATALENGTH(CITY)>0 '.
      'OR DATALENGTH(STATE)>0 '.
      'OR DATALENGTH(POSTAL)>0 '.
      'OR DATALENGTH(COUNTRY)>0';

    $db_dexa->execute( $sql );
  }

  // retrieve correct meta data from salix
  //
  $sql = sprintf(
    'SELECT '.
    'DATE_FORMAT(b.dob, "%%Y-%%m-%%d") AS BIRTHDATE, '.
    'b.sex as SEX, '.
    'b.ethnicity as ETHNICITY, '.
    's.scan_datetime, '.
    's.scanid, '.
    's.patient_key, '.
    'e.height as HEIGHT, '.
    'e.weight as WEIGHT, '.
    'e.rank, '.
    'n.id AS serial_number '.
    'FROM apex_deployment d '.
    'JOIN apex_host h ON h.id=d.apex_host_id '.
    'JOIN apex_scan s ON s.id=d.apex_scan_id '.
    'JOIN apex_exam e ON e.id=s.apex_exam_id '.
    'JOIN apex_baseline b ON b.id=e.apex_baseline_id '.
    'JOIN serial_number n ON n.id=e.serial_number_id '.
    'WHERE h.id=%d '.
    'AND s.scan_datetime IS NOT NULL '.
    'AND s.scanid IS NOT NULL '.
    'AND s.patient_key IS NOT NULL '.
    'AND s.availability=1 '.
    'AND d.status="pending"', $host_item['id'] );

  $deployment_list = $db_salix->get_all( $sql );
  if( false === $deployment_list || !is_array( $deployment_list ) ||
    0 == count( $deployment_list ) )
  {
    write_log( sprintf( 'No meta data to push to %s', $host_item['name'] ) );
    continue;
  }

  // Loop over the salix records, searching the APEX host db for
  // corresponding records
  //
  $total = count( $deployment_list );
  $num_patient = 0;
  $num_patient_item = 0;
  $num_analysis = 0;
  $num_analysis_item = 0;
  foreach( $deployment_list as $deployment_item )
  {
    $bday = new DateTime( $deployment_item['BIRTHDATE'] );
    $sday = new DateTime( $deployment_item['scan_datetime'] );
    $diff = $sday->diff( $bday );
    $rank = $deployment_item['rank'];

    $deployment_item['ADJUSTED_AGE'] = $diff->y + $diff->m / 12.0 + $diff->d / 365.25;

    $deployment_item['BMI'] = 0 < $deployment_item['HEIGHT'] ?
      $deployment_item['WEIGHT']/(0.0001*$deployment_item['HEIGHT']*$deployment_item['HEIGHT']) : -1;

    $dexa_patient = null;
    if( 1 == $rank )
    {
      // get the info from PATIENT table
      $sql = sprintf(
        "SELECT FORMAT(BIRTHDATE, 'yyyy-MM-dd') BIRTHDATE, SEX, ETHNICITY, WEIGHT, HEIGHT, BMI ".
        'FROM PatScan.dbo.PATIENT '.
        "WHERE PATIENT_KEY='%s'", $deployment_item['patient_key'] );
      $dexa_patient = $db_dexa->get_row( $sql );
      if( false === $dexa_patient || !is_array( $dexa_patient ) )
        $dexa_patient = null;
    }
    // always get the info from the ScanAnalysis table
    $sql = sprintf(
      'SELECT WEIGHT, HEIGHT, BMI, ADJUSTED_AGE '.
      'FROM PatScan.dbo.ScanAnalysis '.
      "WHERE PATIENT_KEY='%s' ".
      "AND SCANID='%s' ".
      "AND SERIAL_NUMBER='%s'",
      $deployment_item['patient_key'],
      $deployment_item['scanid'],
      $deployment_item['serial_number'] );

    $dexa_analysis = $db_dexa->get_row( $sql );
    if( false === $dexa_analysis || !is_array( $dexa_analysis ) )
      $dexa_analysis = null;

    if( 1 == $rank && null !== $dexa_patient )
    {
      $diff = array();
      $diff_keys = array( 'SEX', 'ETHNICITY', 'BIRTHDATE' );
      foreach( $diff_keys as $key )
      {
        if( $deployment_item[$key] != $dexa_patient[$key] )
          $diff[$key] = array(
            $deployment_item[$key],
            $dexa_patient[$key] );
      }

      $diff_keys = array( 'WEIGHT', 'HEIGHT', 'BMI' );
      foreach( $diff_keys as $key )
      {
        $precision = $PRECISION_FIELDS[$key];
        if( 0 < $deployment_item[$key] && round( $deployment_item[$key], $precision ) !=
          round( $dexa_patient[$key], $precision ) )
        $diff[$key] = array(
          round( $deployment_item[$key], $precision ),
          round( $dexa_patient[$key], $precision ) );
      }

      if( 0 < count( $diff ) )
      {
        $sql = 'UPDATE PatScan.dbo.PATIENT SET ';
        foreach( $diff as $key => $data )
        {
          $sql .= sprintf(
            ( in_array( $key, $QUOTED_FIELDS ) ? "%s='%s', " : '%s=%s, ' ), $key, $data[0] );
        }
        $sql = rtrim( $sql, ', ' ) .
          sprintf(
            " WHERE PATIENT_KEY='%s'", $deployment_item['patient_key'] );

        if( false !== $db_dexa->execute( $sql ) )
        {
          $num_patient++;
          $num_patient_item += count( $diff );
        }
      }
    } // end patient data correction

    if( null !== $dexa_analysis )
    {
      $diff = array();
      $diff_keys = array( 'ADJUSTED_AGE', 'WEIGHT', 'HEIGHT', 'BMI' );
      foreach( $diff_keys as $key )
      {
        $precision = $PRECISION_FIELDS[$key];
        if( 0 < $deployment_item[$key] &&
          round( $deployment_item[$key], $precision ) !=
          round( $dexa_analysis[$key], $precision ) )
        {
          $diff[$key] = array(
            round( $deployment_item[$key], $precision ),
            round( $dexa_analysis[$key], $precision ) );
        }
      }

      if( 0 < count( $diff ) )
      {
        $sql = 'UPDATE PatScan.dbo.ScanAnalysis SET ';
        foreach( $diff as $key => $data )
        {
          $sql .= sprintf(
            ( in_array( $key, $QUOTED_FIELDS ) ? "%s='%s', " : '%s=%s, ' ), $key, $data[0] );
        }
        $sql = rtrim( $sql, ', ' ) .
          sprintf(
            " WHERE PATIENT_KEY='%s' ".
            "AND SCANID='%s' ".
            "AND SERIAL_NUMBER='%s'",
            $deployment_item['patient_key'],
            $deployment_item['scanid'],
            $deployment_item['serial_number'] );

        if( false !== $db_dexa->execute( $sql ) )
        {
          $num_analysis++;
          $num_analysis_item += count( $diff );
        }
      }
    }
  } // end scan data correction

  $process_item['name'][] = $host_item['name'];
  $process_item['total'][] = $total;
  $process_item['num_patient'][] = $num_patient;
  $process_item['num_patient_item'][] = $num_patient_item;
  $process_item['num_analysis'][] = $num_analysis;
  $process_item['num_analysis_item'][] = $num_analysis_item;
}

write_log( sprintf(
  'hosts [%s] total updates [%s] '.
  'patients [%s] patient items [%s] '.
  'analysis [%s] analysis items [%s]',
  implode( '/', $process_item['name'] ),
  implode( '/', $process_item['total'] ),
  implode( '/', $process_item['num_patient'] ),
  implode( '/', $process_item['num_patient_item'] ),
  implode( '/', $process_item['num_analysis'] ),
  implode( '/', $process_item['num_analysis_item'] ) ) );

write_log( 'push_salix_meta done!' );

return 1;
