#!/usr/bin/php
<?php
/**
 * receive_exports.php
 *
 * A script that scans e:/OutGoing/* on APEX hosts
 * to recover export filenames and then update the apex_deployment
 * status, export_datetime and export_filename columns
 *
 *
 * @author Dean Inglis <inglisd@mcmaster.ca>
 */

chdir( dirname( __FILE__ ).'/../' );
require_once 'settings.ini.php';
require_once 'settings.local.ini.php';
require_once $SETTINGS['path']['CENOZO'].'/src/initial.class.php';
$initial = new \cenozo\initial();
$settings = $initial->get_settings();

define( 'DB_SERVER', $settings['db']['server'] );
define( 'DB_PREFIX', $settings['db']['database_prefix'] );
define( 'DB_USERNAME', $settings['db']['username'] );
define( 'DB_PASSWORD', $settings['db']['password'] );

define( 'USER', $settings['utility']['username'] );
define( 'APEX_SSH_KEY', $settings['apex']['apex_ssh_key'] );

// a lite mysqli wrapper
require_once( $settings['path']['PHP_UTIL'].'/database.class.php' );

// function for writing to the log
function write_log( $message )
{
  file_put_contents(
    LOG_FILE_PATH,
    sprintf( "%s  [cron] <%s> %s\n\n", date( 'Y-m-d (D) H:i:s' ), USER, $message ),
    FILE_APPEND
  );
}

// ssh args: apex host address, command arg
function ssh_command( $address, $arg )
{
  return trim( shell_exec( sprintf(
    'ssh -i ' . APEX_SSH_KEY . ' clsa@%s %s', $address, $arg ) ) );
}

/*-------------MAIN PROGRAM-----------*/

$db_salix = null;
try
{
  $db_salix = new database(
    DB_SERVER, DB_USERNAME, DB_PASSWORD, DB_PREFIX . 'salix' );
}
catch( Exception $e )
{
  write_log( $e->getMessage() );
  return 0;
}

// the number of exports per host
//
$export_limit = 100;
if( 2 == $argc )
{
  $export_limit = $argv[1];
}

$sql = 'SELECT * FROM apex_host';
$host_list = $db_salix->get_all( $sql );
$process_list = array(
  'name' => array(),
  'num_export' => array(),
  );

foreach( $host_list as $host_item )
{
  $num_export = 0;

  $apex_host_id = $host_item['id'];

  $host_address = $host_item['host'];
  $sql = sprintf(
    'SELECT '.
    'IF( side="none", '.
    '  CONCAT_WS( "/", "/cygdrive/e/OutGoing", type ), '.
    '  CONCAT_WS( "/", "/cygdrive/e/OutGoing", type, side ) ) AS path, '.
    'barcode_list,  '.
    'DATE_FORMAT(scan_datetime, "%%Y%%m%%d") as scan_date , '.
    'serial_number_id as serial_number, '.
    'CASE '.
    '  WHEN side="left" THEN "L" '.
    '  WHEN side="right" THEN "R" '.
    '  ELSE "NA" '.
    'END AS side_code, '.
    'CASE  '.
    '  WHEN type="forearm" THEN "ARM" '.
    '  WHEN type="hip" THEN "HIP" '.
    '  WHEN type="spine" THEN "LSPINE" '.
    '  WHEN type="lateral" THEN "LSPINE" '.
    '  ELSE "NA" '.
    'END AS body_part, '.
    'd.id AS deployment_id, '.
    'priority '.
    'FROM apex_deployment d '.
    'JOIN apex_host h ON h.id=d.apex_host_id '.
    'JOIN apex_scan s ON s.id=d.apex_scan_id '.
    'JOIN apex_exam e ON e.id=s.apex_exam_id '.
    'JOIN serial_number n ON n.id=e.serial_number_id '.
    'JOIN scan_type t ON t.id=s.scan_type_id '.
    'JOIN apex_baseline b ON b.id=e.apex_baseline_id '.
    'JOIN %scenozo.participant p on p.id=b.participant_id '.
    'JOIN ( '.
    '  SELECT '.
    '  b.participant_id, '.
    '  GROUP_CONCAT(barcode ORDER BY barcode ASC) AS barcode_list '.
    '  FROM apex_exam e '.
    '  JOIN apex_baseline b ON b.id=e.apex_baseline_id '.
    '  GROUP BY participant_id '.
    ') AS x ON x.participant_id=b.participant_id '.
    'WHERE status = "completed" '.
    'AND s.availability=1 '.
    'AND type="hip" '.
    'AND s.scan_datetime IS NOT NULL '.
    'AND h.id=%d '.
    'ORDER BY priority DESC', DB_PREFIX, $apex_host_id );

  $scan_list = $db_salix->get_all( $sql );
  if( false === $scan_list || !is_array( $scan_list ) ||
    0 == count( $scan_list ) )
  {
    continue;
  }

  $export_data = array();
  foreach( $scan_list as $item )
  {
    $path = $item['path'] . '/';
    $barcode_list = explode(',',$item['barcode_list']);
    $body_part = $item['body_part'];
    $scan_date = $item['scan_date'];
    $serial_number = $item['serial_number'];
    $side = $item['side_code'];
    foreach($barcode_list as $folder_barcode)
    {
      $folder_path = $path . $folder_barcode . '/';

      // if the folder doesnt exist move on
      //
      $res = ssh_command( $host_address, sprintf(
        '[ -d %s ] && echo "found"', $folder_path ) );

      if('found' != $res) continue;

      foreach($barcode_list as $file_barcode)
      {
        $filename = array($file_barcode,$scan_date,$serial_number);
        if('NA' != $body_part) $filename[] = $body_part;
        if('NA' != $side) $filename[] = $side;
        $filename = $folder_path . implode('_', $filename) . '.dcm';

        // if a valid file, get the create timestamp
        //
        $res = ssh_command( $host_address, sprintf(
          'ls -l -tr --time-style="long-iso" -d -1 %s 2>/dev/null | '.
          "grep -E '\/[1-9]{1}[0-9]{7}\/' | ".
          "awk '{print $6" . '" "$7" "$8}'. "'", $filename ) );

        if('' != $res )
        {
          $parts = explode(' ', $res);
          if(3==count($parts))
          {
            $export_data[] = array(
              'file' => $filename,
              'date' => sprintf('%s %s:00', $parts[0], $parts[1]),
              'deployment_id' => $item['deployment_id']);
            break 2;
          }
        }
      }
    }
  } // end current uid list

  foreach( $export_data as $item )
  {
    $sql = sprintf(
      'UPDATE apex_deployment SET '.
      'status="exported", '.
      'export_datetime="%s", '.
      'export_filename="%s" '.
      'WHERE id=%d', $item['date'], $item['file'], $item['deployment_id'] );
    if( false !== $db_salix->execute( $sql ) )
    {
      $num_export++;
    }
  }

  $process_list['name'][] = $host_item['name'];
  $process_list['num_export'][] = $num_export;

  if( $num_export >= $export_limit ) break;
}

write_log( sprintf( 'hosts [%s] exports [%s]',
  implode( '/', $process_list['name'] ),
  implode( '/', $process_list['num_export'] ) ) );

write_log( 'receive_exports done!' );

return 1;
